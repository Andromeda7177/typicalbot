name: Test

on:
  push:
    branches:
      - test**
  pull_request:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install node v12
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: install build tools
        run: sudo apt-get install libcairo2-dev libgif-dev libjpeg-dev libpango1.0-dev librsvg2-dev -y
      - name: install dependencies (with yarn)
        run: yarn install
      - name: copy example config
        run: cp etc/config.example.json etc/config.json
      - name: build
        run: yarn run build
      - name: upload dependencies
        uses: actions/upload-artifact@v2
        with:
          name: typicalbot-deps
          path: node_modules/
      - name: upload dist
        uses: actions/upload-artifact@v2
        with:
          name: typicalbot-dist
          path: dist/
  test:
    name: run
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install node v12
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: install build tools
        run: sudo apt-get install libcairo2-dev libgif-dev libjpeg-dev libpango1.0-dev librsvg2-dev -y
      - name: install rethinkdb
        run: source /etc/lsb-release && echo "deb https://download.rethinkdb.com/apt $DISTRIB_CODENAME main" | sudo tee /etc/apt/sources.list.d/rethinkdb.list && wget -qO- https://download.rethinkdb.com/apt/pubkey.gpg | sudo apt-key add - && sudo apt-get update && sudo apt-get install rethinkdb -y
      - name: start rethinkdb
        run: rethinkdb --daemon --no-http-admin
      - name: download dependencies
        uses: actions/download-artifact@v2
        with:
          name: typicalbot-deps
          path: node_modules/
      - name: download dist
        uses: actions/download-artifact@v2
        with:
          name: typicalbot-dist
          path: dist/
      - name: copy example config
        run: cp etc/config.example.json etc/config.json
      - name: setup
        run: node dist/bin/setup.js
      - name: start
        run: node dist/src/index.js
        env:
          BUILD: test
          CLUSTERED: false
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
